{"ast":null,"code":"export var questionObj = {\n  \"Qtext\": \"\\n \\nConsider the given figure. It is given that \\\\(TR \\\\parallel PO \\\\), and \\\\(TS \\\\parallel PQ \\\\). Now, prove that\\n\\\\[\\n\\t\\\\frac{NR }{NO } = \\\\frac{NS }{NQ }\\n\\\\]\\n\\\\newline\\ntikzpicture{}\\n\\\\newline\\n\\n\",\n  \"Steps\": [{\n    \"id\": \"s1\",\n    \"n_params\": 2,\n    \"step_txt\": \"$$\\\\text{In triangle NOP we have $TR \\\\parallel PO $. So, we can write}$$\\n\\\\[\\n\\t\\\\frac{\\\\input[s1v1]{}\\\\input[s1v2]{} }{NO } = \\\\frac{NT }{TP }\\n\\\\]\"\n  }, {\n    \"id\": \"s2\",\n    \"n_params\": 2,\n    \"step_txt\": \"$$\\\\text{\\nNow, in triangle NQP , we have $TS \\\\parallel PQ $. So, we can write}$$\\n\\\\[\\n\\t\\\\frac{N\\\\input[s2v1]{} }{NQ } = \\\\frac{\\\\input[s2v2]{}T }{NP }\\n\\\\]\"\n  }, {\n    \"id\": \"s3\",\n    \"n_params\": 2,\n    \"step_txt\": \"\\nFrom the above two results, we can write that\\n\\\\[\\n\\t\\\\frac{NR }{NO } = \\\\frac{\\\\input[s3v1]{}\\\\input[s3v2]{} }{NQ }\\n\\\\]\"\n  }, {\n    \"id\": \"s4\",\n    \"n_params\": 0,\n    \"step_txt\": \"\\nHence proved.\\n\\\\newline\\n\\n\"\n  }]\n};\nexport var resp = [{\n  \"data\": [\"N\", \"R\"],\n  \"text\": \"$$\\\\text{Using Thale's Theorem we can write $\\\\frac{RN }{ON } = \\\\frac{TT }{PN }$}$$\"\n}, {\n  \"data\": [\"S\", \"N\"],\n  \"text\": \"$$\\\\text{Using Thale's Theorem we can write $\\\\frac{NS }{NQ } = \\\\frac{NT }{NP }$}$$\"\n}, {\n  \"data\": [\"N\", \"S\"],\n  \"text\": \"$$\\\\text{Using property, if $a = b$, and $a = c$, then $b = c$, therefore, from the above results we can write $\\\\frac{NR }{NO } = \\\\frac{NS }{NQ }$}$$\"\n}, {\n  \"data\": [],\n  \"text\": \" \"\n}];","map":{"version":3,"names":["questionObj","resp"],"sources":["/home/wiz/Practworks_internship/reactjs/src/questions.jsx"],"sourcesContent":[" export const questionObj = {\"Qtext\": \"\\n \\nConsider the given figure. It is given that \\\\(TR \\\\parallel PO \\\\), and \\\\(TS \\\\parallel PQ \\\\). Now, prove that\\n\\\\[\\n\\t\\\\frac{NR }{NO } = \\\\frac{NS }{NQ }\\n\\\\]\\n\\\\newline\\ntikzpicture{}\\n\\\\newline\\n\\n\", \"Steps\": [{\"id\": \"s1\", \"n_params\": 2, \"step_txt\": \"$$\\\\text{In triangle NOP we have $TR \\\\parallel PO $. So, we can write}$$\\n\\\\[\\n\\t\\\\frac{\\\\input[s1v1]{}\\\\input[s1v2]{} }{NO } = \\\\frac{NT }{TP }\\n\\\\]\"}, {\"id\": \"s2\", \"n_params\": 2, \"step_txt\": \"$$\\\\text{\\nNow, in triangle NQP , we have $TS \\\\parallel PQ $. So, we can write}$$\\n\\\\[\\n\\t\\\\frac{N\\\\input[s2v1]{} }{NQ } = \\\\frac{\\\\input[s2v2]{}T }{NP }\\n\\\\]\"}, {\"id\": \"s3\", \"n_params\": 2, \"step_txt\": \"\\nFrom the above two results, we can write that\\n\\\\[\\n\\t\\\\frac{NR }{NO } = \\\\frac{\\\\input[s3v1]{}\\\\input[s3v2]{} }{NQ }\\n\\\\]\"}, {\"id\": \"s4\", \"n_params\": 0, \"step_txt\": \"\\nHence proved.\\n\\\\newline\\n\\n\"}]} \n\n export const resp = [{\"data\": [\"N\", \"R\"], \"text\": \"$$\\\\text{Using Thale's Theorem we can write $\\\\frac{RN }{ON } = \\\\frac{TT }{PN }$}$$\"}, {\"data\": [\"S\", \"N\"], \"text\": \"$$\\\\text{Using Thale's Theorem we can write $\\\\frac{NS }{NQ } = \\\\frac{NT }{NP }$}$$\"}, {\"data\": [\"N\", \"S\"], \"text\": \"$$\\\\text{Using property, if $a = b$, and $a = c$, then $b = c$, therefore, from the above results we can write $\\\\frac{NR }{NO } = \\\\frac{NS }{NQ }$}$$\"}, {\"data\": [], \"text\": \" \"}] \n"],"mappings":"AAAC,OAAO,IAAMA,WAAW,GAAG;EAAC,OAAO,EAAE,kNAAkN;EAAE,OAAO,EAAE,CAAC;IAAC,IAAI,EAAE,IAAI;IAAE,UAAU,EAAE,CAAC;IAAE,UAAU,EAAE;EAAwJ,CAAC,EAAE;IAAC,IAAI,EAAE,IAAI;IAAE,UAAU,EAAE,CAAC;IAAE,UAAU,EAAE;EAAiK,CAAC,EAAE;IAAC,IAAI,EAAE,IAAI;IAAE,UAAU,EAAE,CAAC;IAAE,UAAU,EAAE;EAA8H,CAAC,EAAE;IAAC,IAAI,EAAE,IAAI;IAAE,UAAU,EAAE,CAAC;IAAE,UAAU,EAAE;EAAgC,CAAC;AAAC,CAAC;AAEt4B,OAAO,IAAMC,IAAI,GAAG,CAAC;EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAAE,MAAM,EAAE;AAAsF,CAAC,EAAE;EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAAE,MAAM,EAAE;AAAsF,CAAC,EAAE;EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;EAAE,MAAM,EAAE;AAAyJ,CAAC,EAAE;EAAC,MAAM,EAAE,EAAE;EAAE,MAAM,EAAE;AAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}